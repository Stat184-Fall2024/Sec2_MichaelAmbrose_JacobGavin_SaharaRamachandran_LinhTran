---
title: "European Wind and Renewable Energy Trends (2016-2018)"
subtitle: "Stat 184"
author: "Akhilesh Nimse, Jacob Cohen, Linh Tran, Fateenah Farid"
format: pdf
editor: visual
---

# Analyzing European Energy Production: Wind, Renewable, and Fossil Fuels (2016-2018)

## 1. Introduction

In recent years, there has been a significant shift in the European Union's (EU) energy landscape, driven by efforts to reduce carbon emissions and transition towards more sustainable energy sources. The EU has increasingly focused on expanding renewable energy, such as wind, solar, and hydro, while gradually decreasing its reliance on fossil fuels. This shift is evident in the energy production data from 2016 to 2018, sourced from Eurostat, which tracks energy generation across various sources including conventional thermal, nuclear, hydro, wind, solar, and geothermal energy.

Our project aims to explore these changes in the EU's energy production between 2016 and 2018, identifying key trends and understanding how the energy mix is evolving. Specifically, we focus on how the growth of renewable energy sources, such as wind and solar, has impacted the overall energy supply and the contributions of traditional energy sources. By analyzing this data, we aim to answer questions about the sustainability and resilience of the EU’s energy sector, the role of different energy sources in meeting demand, and the challenges and opportunities that lie ahead in the transition to cleaner energy.

## 2. Research Questions

1.  How does the total energy production vary across European countries in 2018? Which are the top 5 most produced ?
2.  What is the proportion of energy production for the European countries in 2018?
3.  How have renewable energy trends changed over time (2016–2018) for European countries?
4.  

## 3. Data Description and Provenance

Describe where the data comes from, including who collected it and the purpose behind the data collection. List any attributes that are relevant to your research questions. Explain how the data aligns with the FAIR and/or CARE principles (Findable, Accessible, Interoperable, Reusable).

## 4. Data Wrangling and Cleaning

Explain any data wrangling or cleaning you had to do before performing the analysis (e.g., handling missing values, reformatting data). Briefly describe the tools used (e.g., R, Python, etc.) and methods used to clean the data. \## 5. Exploratory Data Analysis (EDA) Provide an overview of the main insights you found from the data. Include multiple visualizations (e.g., graphs, tables, maps) to help explain the data. Ensure to include a table that summarizes key statistics, and at least one graph/plot. Explain each visualization in the narrative (e.g., what trends the graph shows, what the table tells us about the data). Optional: Create a map if it adds value to your analysis. \## 6. Analysis of Research Questions Discuss how your data addresses each research question. Analyze the results with the help of the visualizations and any relevant statistics. Use narrative text to provide context and explain what the visualizations reveal about the data.

## 7. Additional Analysis (Optional)

If applicable, apply more advanced statistical methods (e.g., hypothesis testing, regression analysis, ANOVA) to provide further insights. Mention any trends or anomalies discovered in the data and discuss their implications.

## 8. Conclusion

Summarize the findings from your analysis. Answer each research question based on the results. Discuss any limitations in your analysis and suggest areas for future research or analysis. \## 9. References Cite any sources used in your report (data, articles, books) following your chosen citation style (e.g., APA7, MLA9). If you are using data from an external source like Eurostat or OECD, make sure to properly cite these sources.

## 10. Appendix: Code

```{r codeAppend, ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
# Data Cleaning
library(tidyverse)
library(readxl)
library(countrycode)

raw_code <- countrycode::codelist %>% 
  select(country_name = country.name.en, country = eurostat)

raw_excel <- read_excel("C:/Users/linht/Downloads/Electricity_generation_statistics_2019.xlsx", sheet = 3)

raw_excel %>% 
  filter(!is.na(...4)) %>% 
  mutate(country = str_remove_all(...4, "[:digit:]"), .before = ...1) %>% 
  mutate(country = if_else(
    str_length(country) > 1, country, NA_character_), 
    country = str_extract(country, "[:alpha:]+")
  ) %>% 
  fill(country) %>% 
  select(-c(...1, ...2, ...14:...18))

row_stat <- read_excel(
  path = "C:/Users/linht/Downloads/Electricity_generation_statistics_2019.xlsx", 
  sheet = 3,
  range = "C48:C61",
  col_names = FALSE
)[[1]][c(1, 3:14)] %>%   
  str_remove("[:digit:]") %>% 
  str_remove("of which: ") %>% 
  str_remove("\\.") %>% str_trim()

country_range <- tibble(row_start = seq(from = 46, to = 454, by = 34), 
                        row_end = seq(from = 61, to = 469, by = 34)) %>% 
  mutate(col1 = 4, col2 = col1 + 5, col3 = col2 + 5) %>% 
  pivot_longer(cols = col1:col3, names_to = "col_var", values_to = "col_start") %>% 
  mutate(col_end = col_start + 2) %>% 
  select(-col_var) %>% 
  slice(-n(), -(n()-1)) %>% 
  mutate(row_stat = list(row_stat))


get_country_stats <- function(row_start, row_end, col_start, col_end, row_stat){
  
  # # pull the row_stat names
  # row_stat <- row_stat
  
  # create the range programatically
  col_range <- glue::glue("{LETTERS[col_start]}{row_start}:{LETTERS[col_end]}{row_end}")
  
  # read in the data section quietly
  raw_data <- suppressMessages(
    read_excel("C:/Users/linht/Downloads/Electricity_generation_statistics_2019.xlsx", 
               sheet = 3,
               col_names = FALSE,
               range = col_range))
  
  
  country_data <-  raw_data %>% 
    # set appropriate names
    set_names(nm = c(2016:2018)) %>% 
    # drop the year ranges
    filter(!is.na(`2016`), `2016` != "2016") %>% 
    # get the country into a column rather than a header
    mutate(country = if_else(
      is.na(`2017`), 
      `2016`, 
      NA_character_), 
      .before = `2016`) %>% 
    # fill country down
    fill(country) %>% 
    # drop old country header
    filter(!is.na(`2017`)) %>% 
    # add row stat in
    mutate(type = row_stat, 
           .after = country, 
           # add levels of the stats
           level = c("Total", "Level 1", "Level 1", "Level 1", "Level 2", 
                     "Level 1", "Level 1", "Level 1", "Level 1", "Total", 
                     "Total", "Total", "Total")) %>% 
    # format as double
    mutate(across(c(`2016`:`2018`), as.double))
  
  # return data
  country_data
}

all_countries <- country_range %>% 
  pmap_dfr(get_country_stats) %>% 
  left_join(raw_code, by = "country") %>% 
  select(country, country_name, everything())

country_totals <- all_countries %>% 
  filter(level == "Total")

country_production <- all_countries %>% 
  filter(level != "Total")

# sanity check
country_totals %>% 
  # filter(type == "Total net production") %>% 
  pivot_longer(cols = `2016`:`2018`, names_to = "year", values_to = "value") %>% 
  filter(type == "Total net production") %>%
  # count(type)%>% 
  ggplot(aes(y = value, x = year, color = country, group = country)) +
  geom_line()

# Save the data frames to CSV files in R
write.csv(country_totals, "EnergyProductionByCountry_Europe2016to2018.csv", row.names = FALSE)
write.csv(country_production, "EnergyTypesAndSources_Europe2016to2018.csv", row.names = FALSE)
```
